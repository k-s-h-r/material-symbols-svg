#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// --- 設定 ---
const WEIGHTS = [100, 200, 300, 400, 500, 600, 700];

// --- ヘルパー関数 ---

function toPascalCase(str) {
  let result = str.split(/[-_]/).map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join('');
  return /^\d/.test(result) ? `Icon${result}` : result;
}

// --- メインロジック ---

function main() {
  const style = process.argv[2];
  if (!style) {
    console.error('❌ Error: Style argument is missing. e.g., `node generate-exports.cjs outlined`');
    process.exit(1);
  }

  console.log(`🚀 Generating export entry points for style: ${style}...`);

  // パッケージディレクトリを決定
  const styleToPackage = {
    'outlined': 'react',
    'rounded': 'react-rounded', 
    'sharp': 'react-sharp'
  };
  const packageName = styleToPackage[style];
  if (!packageName) {
    console.error(`❌ Error: Unknown style: ${style}. Supported styles: outlined, rounded, sharp`);
    process.exit(1);
  }

  const ICONS_DIR = path.join(__dirname, `../packages/${packageName}/src/icons`);
  const SRC_DIR = path.join(__dirname, `../packages/${packageName}/src`);

  const iconFiles = fs.readdirSync(ICONS_DIR).filter(f => f.endsWith('.ts'));

  for (const weight of WEIGHTS) {
    let exportsContent = `/* eslint-disable */\n// This file is auto-generated by build scripts.\n// Do not edit this file directly.\n\n// Re-export types from react-core package\nexport type { IconProps, MaterialSymbolsComponent } from '@material-symbols-svg/react-core';\n\n`;
    for (const iconFile of iconFiles) {
      const iconName = path.basename(iconFile, '.ts');
      const componentName = toPascalCase(iconName);
      const filledComponentName = `${componentName}Fill`;
      
      const internalName = `${componentName}W${weight}`;
      const internalFilledName = `${filledComponentName}W${weight}`;

      exportsContent += `export { ${internalName} as ${componentName}, ${internalFilledName} as ${filledComponentName} } from './icons/${iconName}';\n`;
    }
    fs.writeFileSync(path.join(SRC_DIR, `w${weight}.ts`), exportsContent);
    console.log(`✅ Generated w${weight}.ts`);
  }

  // Create default export (w400)
  fs.copyFileSync(path.join(SRC_DIR, 'w400.ts'), path.join(SRC_DIR, 'index.ts'));
  console.log(`✅ Generated index.ts (aliased to w400.ts)`);

  console.log(`🎉 Successfully generated all export entry points for style: ${style}`);
}

main();
